/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pkg43_01_nagy_feladat_recept_konyv;

import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author takac
 */
public class Foablak extends javax.swing.JFrame {

    private DefaultListModel<Recept> listModel = new DefaultListModel<>();
    private String fajta;
    private SzakacsKonyvDAO adatbazisKezelo;
    
    public Foablak() {
        initComponents();
        setLocationRelativeTo(null);
        try {
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/receptek", "root", "1234");
            adatbazisKezelo = new SzakacsKonyvDAOJDBCImpl(conn);
        } catch(SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Hiba történt az adatbáziskapcsolatban! Üzenet: " + ex.getMessage(), "Hiba!", JOptionPane.ERROR_MESSAGE);
        }
        receptLista.setModel(listModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        receptLista = new javax.swing.JList<>();
        btElkeszetes = new javax.swing.JButton();
        btUjReceptHozzaadas = new javax.swing.JButton();
        btReceptModositas = new javax.swing.JButton();
        btReceptTorles = new javax.swing.JButton();
        btKilepes = new javax.swing.JButton();
        lbKivalasztva = new javax.swing.JLabel();
        lbKivalasztott = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tfKeresettReceptNev = new javax.swing.JTextField();
        btKereses = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btMenu = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Szakácskönyv                                                          Takács Imre  v0.1");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 153, 153));
        jLabel1.setText("Kérem válassza ki a Menüből ,hogy milyen fajta ételeket szeretne megnézni. ");

        receptLista.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jScrollPane1.setViewportView(receptLista);

        btElkeszetes.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btElkeszetes.setText("Recept elkészítése");
        btElkeszetes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btElkeszetesActionPerformed(evt);
            }
        });

        btUjReceptHozzaadas.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btUjReceptHozzaadas.setText("Új recept hozzáadása");
        btUjReceptHozzaadas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btUjReceptHozzaadasActionPerformed(evt);
            }
        });

        btReceptModositas.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btReceptModositas.setText("Recept módosítása");
        btReceptModositas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btReceptModositasActionPerformed(evt);
            }
        });

        btReceptTorles.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btReceptTorles.setText("Recept törlése");
        btReceptTorles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btReceptTorlesActionPerformed(evt);
            }
        });

        btKilepes.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btKilepes.setText("Kilépés");
        btKilepes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btKilepesActionPerformed(evt);
            }
        });

        lbKivalasztva.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbKivalasztva.setText("Kiválasztva:");

        lbKivalasztott.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 153, 153));
        jLabel2.setText("A recept neve és felviteli dátuma:(yyyy-HH-dd)");

        tfKeresettReceptNev.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        btKereses.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btKereses.setText("Keresés");
        btKereses.setMaximumSize(new java.awt.Dimension(89, 25));
        btKereses.setMinimumSize(new java.awt.Dimension(89, 25));
        btKereses.setPreferredSize(new java.awt.Dimension(89, 25));
        btKereses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btKeresesActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("A keresett recept neve:");

        btMenu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btMenu.setText("Menü");
        btMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btMenuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfKeresettReceptNev)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btKereses, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btUjReceptHozzaadas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btReceptModositas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btReceptTorles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btKilepes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btElkeszetes, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbKivalasztva)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbKivalasztott, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addComponent(btMenu)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btElkeszetes, btKilepes, btReceptModositas, btReceptTorles, btUjReceptHozzaadas});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(btMenu)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(btKereses, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(tfKeresettReceptNev, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbKivalasztva, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbKivalasztott, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btElkeszetes, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btUjReceptHozzaadas)
                        .addGap(18, 18, 18)
                        .addComponent(btReceptModositas)
                        .addGap(18, 18, 18)
                        .addComponent(btReceptTorles)
                        .addGap(33, 33, 33)
                        .addComponent(btKilepes))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btElkeszetes, btKilepes, btReceptModositas, btReceptTorles, btUjReceptHozzaadas});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btKereses, jLabel3, tfKeresettReceptNev});

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void btKilepesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btKilepesActionPerformed
        try {
          adatbazisKezelo.bezar();
        } catch(SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Hiba az adatbázis bezárása közben!", "Hiba!", JOptionPane.ERROR_MESSAGE);
            return;
        }
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
        
    }//GEN-LAST:event_btKilepesActionPerformed
    
    private void btUjReceptHozzaadasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btUjReceptHozzaadasActionPerformed
        try {
            ModositoDialog hozzaAd = new ModositoDialog(this, true, this.adatbazisKezelo);
            hozzaAd.setTitle("Új recept hozzáadása");
            hozzaAd.setVisible(true);
            Recept ujRecept = hozzaAd.getRecept();
            if (ujRecept != null) {
                receptKiir();
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Hiba a '" + lbKivalasztott.getText() + "' hozzáadása közben!", "Hiba!", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }//GEN-LAST:event_btUjReceptHozzaadasActionPerformed
    
    private void btReceptModositasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btReceptModositasActionPerformed
        if (kivalasztEllenor()) {
            if (receptLista.getSelectedValue() != null) {
                ModositoDialog modosit = new ModositoDialog(this, true, receptLista.getSelectedValue(), adatbazisKezelo);
                modosit.setTitle("Recept módosítása");
                modosit.setVisible(true);
                try {
                    receptKiir();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(rootPane, "Hiba a " + modosit.getRecept() + " recept módosítása közben!", "Hiba!", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "Kérem válassza ki melyik receptet szeretné módosítani!", "Értesítés!", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
        }
    }//GEN-LAST:event_btReceptModositasActionPerformed

    private void btElkeszetesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btElkeszetesActionPerformed
        if (kivalasztEllenor()) {
            if (receptLista.getSelectedValue() != null) {
               String szam = JOptionPane.showInputDialog(rootPane, "Kérem írja be számmal hány adagot szeretne elkészíteni!", "Kérdés", JOptionPane.QUESTION_MESSAGE);
                try {
                    int adag = Integer.parseInt(szam);
                    ElkeszetesDialog elkeszit = new ElkeszetesDialog(this, true, receptLista.getSelectedValue(), adag);
                    elkeszit.setVisible(true);
                } catch(NumberFormatException ex) {
                    JOptionPane.showMessageDialog(rootPane, "Kérem egész számmal adja meg az adagot!", "Hiba!", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
            else {
                JOptionPane.showMessageDialog(rootPane, "Kérem válassza ki melyik receptet szeretné elkészíteni!", "Értesítés!", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
        }
    }//GEN-LAST:event_btElkeszetesActionPerformed

    private void btReceptTorlesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btReceptTorlesActionPerformed
        if (kivalasztEllenor()) {
            if (receptLista.getSelectedValue() != null) {
                int eredmeny = JOptionPane.showConfirmDialog(rootPane, "Biztos törölni szeretnéd " + receptLista.getSelectedValue() + " receptet?", "Megerősítés", JOptionPane.YES_OPTION);
                if (eredmeny == JOptionPane.YES_OPTION) {
                    Recept recept = receptLista.getSelectedValue();
                    try {
                        adatbazisKezelo.receptTorlese(recept);
                        receptKiir();
                        if (listModel.isEmpty()) {
                            lbKivalasztott.setText(null);
                        }
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(rootPane, "Hiba történt a " + recept.getNev() + " törlése közben!", "Hiba!", JOptionPane.ERROR_MESSAGE);
                    }
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "Kérem válassza ki melyik receptet szeretné törölni!", "Értesítés!", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
        }
    }//GEN-LAST:event_btReceptTorlesActionPerformed

    private void btKeresesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btKeresesActionPerformed
        if (kivalasztEllenor()) {
           String nev = tfKeresettReceptNev.getText();
            try {
                List<Recept> receptek = adatbazisKezelo.kereses(nev, fajta);
                if (receptek.isEmpty()) {
                    JOptionPane.showMessageDialog(rootPane, "Nem találtam " + nev + " nevű receptet a " + lbKivalasztott.getText() + " között!", "Értesítés", JOptionPane.INFORMATION_MESSAGE);
                    receptKiir();
                } else {
                    listModel.clear();
                    for (Recept recept : receptek) {
                        listModel.addElement(recept);
                    }
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Hiba történt a" + nev + "keresése közben!", "Hiba!", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
    }//GEN-LAST:event_btKeresesActionPerformed

    private void btMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btMenuActionPerformed
        MenuDialog menu = new MenuDialog(this, true, adatbazisKezelo);
        menu.setTitle("Menü");
        menu.setVisible(true);
   
        if (menu.getOke()) {
            this.fajta = menu.getFajta();
            lbKivalasztott.setText(fajta);
            try {
                receptKiir();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Hiba a " + this.fajta + " beolvasása közben!", "Hiba!", JOptionPane.ERROR_MESSAGE);
            }
        }

    }//GEN-LAST:event_btMenuActionPerformed
    
    private Boolean kivalasztEllenor() {
        if (lbKivalasztott.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Kérem válassza ki a Menüben hogy milyen fajta étellel szeretné elvégezni a műveletet.", "Értesítés!", JOptionPane.INFORMATION_MESSAGE);
            return false;
        }
            return true;
    }
    
    private void receptKiir() throws SQLException {
        listModel.clear();
        List<Recept> receptek = this.adatbazisKezelo.beOlvas(fajta);
        for (Recept recept : receptek) {
                listModel.addElement(recept);
            }   
    }
    
    
    /**
     * 
     * 
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Foablak.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Foablak.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Foablak.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Foablak.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Foablak().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btElkeszetes;
    private javax.swing.JButton btKereses;
    private javax.swing.JButton btKilepes;
    private javax.swing.JButton btMenu;
    private javax.swing.JButton btReceptModositas;
    private javax.swing.JButton btReceptTorles;
    private javax.swing.JButton btUjReceptHozzaadas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbKivalasztott;
    private javax.swing.JLabel lbKivalasztva;
    private javax.swing.JList<Recept> receptLista;
    private javax.swing.JTextField tfKeresettReceptNev;
    // End of variables declaration//GEN-END:variables
}
