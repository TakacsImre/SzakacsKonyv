/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pkg43_01_nagy_feladat_recept_konyv;

import java.sql.SQLException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;


/**
 *
 * @author takac
 */
public class ModositoDialog extends javax.swing.JDialog {
    private String fajta;
    private static SzakacsKonyvDAO adatbazisKezelo;
    private Recept recept;
    private List<Hozzavalo> hozzavalok = new ArrayList<>();
    private int darab = 0;
    private DefaultListModel<Hozzavalo> listModel = new DefaultListModel<>();

    public ModositoDialog(java.awt.Frame parent, boolean modal, SzakacsKonyvDAO adatbazisKezelo) {
        super(parent, modal);
        ModositoDialog.adatbazisKezelo = adatbazisKezelo;
        initComponents();
        setLocationRelativeTo(null);
        hozzavalokLista.setModel(listModel);
    }

    public ModositoDialog(java.awt.Frame parent, boolean modal, Recept recept, SzakacsKonyvDAO adatbazisKezelo) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        hozzavalokLista.setModel(listModel);
        ModositoDialog.adatbazisKezelo = adatbazisKezelo;
        this.recept = recept;
        tfReceptNev.setText(recept.getNev());
        tfEtelFajta.setText(recept.getFajta());
        hozzavalok = recept.getHozzavalok();
        for (int i = 0; i < recept.getHozzavalok().size(); i++) {
            darab = recept.getHozzavalok().get(i).getDarab();
        }
        hozzavalokKiir();
        taElkeszetese.setText(recept.getElkeszitese());
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btUjHozzavalo = new javax.swing.JButton();
        lbReceptNev = new javax.swing.JLabel();
        tfReceptNev = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        hozzavalokLista = new javax.swing.JList<>();
        btHozzavaloModosito = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        taElkeszetese = new javax.swing.JTextArea();
        btKesz = new javax.swing.JButton();
        btMegsem = new javax.swing.JButton();
        btHozzavaloTorlese = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        tfEtelFajta = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Kérem írja be 1 adag elkészítéshez szükséges hozzávalókat!");
        jLabel1.setToolTipText("");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Hozzávalók:");

        btUjHozzavalo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btUjHozzavalo.setText("Új hozzávaló hozzáadása");
        btUjHozzavalo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btUjHozzavaloActionPerformed(evt);
            }
        });

        lbReceptNev.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbReceptNev.setText("Kérem írja be a recept nevét (max 45 karakter):");

        tfReceptNev.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tfReceptNev.setToolTipText("");

        hozzavalokLista.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jScrollPane1.setViewportView(hozzavalokLista);

        btHozzavaloModosito.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btHozzavaloModosito.setText("Hozzávaló módosítása");
        btHozzavaloModosito.setPreferredSize(new java.awt.Dimension(183, 25));
        btHozzavaloModosito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btHozzavaloModositoActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Elkészítése:");

        taElkeszetese.setColumns(20);
        taElkeszetese.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        taElkeszetese.setRows(5);
        taElkeszetese.setToolTipText("");
        jScrollPane2.setViewportView(taElkeszetese);

        btKesz.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btKesz.setText("Kész");
        btKesz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btKeszActionPerformed(evt);
            }
        });

        btMegsem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btMegsem.setText("Mégsem");
        btMegsem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btMegsemActionPerformed(evt);
            }
        });

        btHozzavaloTorlese.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btHozzavaloTorlese.setText("Hozzávaló törlése");
        btHozzavaloTorlese.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btHozzavaloTorleseActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Kérem írja be az étel fajtáját (max 45 karakter):");

        tfEtelFajta.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lbReceptNev, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(tfReceptNev, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btMegsem)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btKesz, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
                                    .addComponent(jScrollPane2))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btUjHozzavalo)
                                    .addComponent(btHozzavaloModosito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btHozzavaloTorlese)))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfEtelFajta, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel2, jLabel3});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btHozzavaloModosito, btHozzavaloTorlese, btUjHozzavalo});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btKesz, btMegsem});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbReceptNev, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfReceptNev, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tfEtelFajta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btUjHozzavalo, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btHozzavaloModosito, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btHozzavaloTorlese))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btMegsem)
                    .addComponent(btKesz, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel2, jLabel3});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btHozzavaloModosito, btHozzavaloTorlese, btUjHozzavalo});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btKesz, btMegsem});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel4, lbReceptNev});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {tfEtelFajta, tfReceptNev});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btUjHozzavaloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btUjHozzavaloActionPerformed
        this.darab++;
        HozzavaloDialog hozzaAd = new HozzavaloDialog(this,true);
        hozzaAd.setTitle("Új hozzávaló hozzáadása");
        hozzaAd.setVisible(true);
        if(hozzaAd.getHozzavalo() == null) {
            return;
        }
        Hozzavalo hozzavalo = hozzaAd.getHozzavalo();
        hozzavalo.setDarab(darab);
        if (this.getTitle() == "Recept módosítása") {
            try {
                adatbazisKezelo.hozzavaloKiir(hozzavalo,recept);
                this.hozzavalok = adatbazisKezelo.hozzavaloBeolvasasa(recept);
                hozzavalokKiir();
            } catch(SQLException ex) {
                 JOptionPane.showMessageDialog(rootPane, "Hiba az új " + hozzavalo + " hozzávaló adatbázishoz való hozzáadás közben!", "Hiba!", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            this.hozzavalok.add(hozzavalo);
            hozzavalokKiir();
        }
    }//GEN-LAST:event_btUjHozzavaloActionPerformed

    private void btHozzavaloModositoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btHozzavaloModositoActionPerformed
        if (hozzavalokLista.getSelectedValue() != null) {
            HozzavaloDialog modosit = new HozzavaloDialog(this, hozzavalokLista.getSelectedValue());
            modosit.setTitle("Hozzávaló módosítása");
            modosit.setVisible(true);
            Hozzavalo hozzavalo = modosit.getHozzavalo();
            if (this.getTitle() == "Recept módosítása") { 
                try {
                adatbazisKezelo.hozzavaloModositasa(hozzavalo);
                this.hozzavalok = adatbazisKezelo.hozzavaloBeolvasasa(recept);
                hozzavalokKiir();
                } catch(SQLException ex) {
                    JOptionPane.showMessageDialog(rootPane, "Hiba a " + hozzavalo + " hozzávaló módosítása közben!", "Hiba!", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                for (int i = 0; i < this.hozzavalok.size(); i++) {
                    if (hozzavalo.getDarab() == this.hozzavalok.get(i).getDarab()) {
                        this.hozzavalok.get(i).setMennyiseg(hozzavalo.getMennyiseg());
                        this.hozzavalok.get(i).setMertekegyseg(hozzavalo.getMertekegyseg());
                        this.hozzavalok.get(i).setAlapanyag(hozzavalo.getAlapanyag());
                        this.hozzavalok.get(i).setAr(hozzavalo.getAr());
                    }
                }
                listModel.setElementAt(modosit.getHozzavalo(), hozzavalokLista.getSelectedIndex());
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Kérem válassza ki melyik hozzávalót szeretné módosítani!", "Értesítés!", JOptionPane.INFORMATION_MESSAGE);
        }
        
        
    }//GEN-LAST:event_btHozzavaloModositoActionPerformed
 
    private void btKeszActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btKeszActionPerformed
       
        if (receptEllenorzes()) {
            if (this.getTitle() == "Recept módosítása") {
                recept.setNev(tfReceptNev.getText());
                recept.setFajta(tfEtelFajta.getText());
                recept.setHozzavalok(hozzavalok);
                recept.setElkeszitese(taElkeszetese.getText());
                 try {
                    adatbazisKezelo.receptModosit(recept);
                } catch(SQLException ex) {
                     JOptionPane.showMessageDialog(rootPane, "Hiba a " + recept.getNev()+ " recept módosítása közben!", "Hiba!", JOptionPane.ERROR_MESSAGE);
                } 
            } else {
                this.fajta = tfEtelFajta.getText();
                recept = new Recept(tfReceptNev.getText(), fajta, hozzavalok, taElkeszetese.getText());
                recept.setFelveteliDatum(LocalDate.now());
                try {
                    adatbazisKezelo.kiir(recept);
                } catch(SQLException ex) {
                     JOptionPane.showMessageDialog(rootPane, "Hiba a " + recept.getNev()+ " recept adatbázishoz való hozzáadása közben!", "Hiba!", JOptionPane.ERROR_MESSAGE);
                }
            }
            this.setVisible(false);
        }
    }//GEN-LAST:event_btKeszActionPerformed

    private void btMegsemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btMegsemActionPerformed
         this.setVisible(false);
    }//GEN-LAST:event_btMegsemActionPerformed

    private void btHozzavaloTorleseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btHozzavaloTorleseActionPerformed
        if (hozzavalokLista.getSelectedValue() != null) {
            int eredmeny = JOptionPane.showConfirmDialog(rootPane, "Biztos törölni szeretnéd " + hozzavalokLista.getSelectedValue() + " hozzávalót?", "Megerősítés", JOptionPane.YES_OPTION);
            if (eredmeny == JOptionPane.YES_OPTION) {
                Hozzavalo hozzavalo = hozzavalokLista.getSelectedValue();
                if (this.getTitle() == "Recept módosítása") {
                    try {
                        if (hozzavalokLista.getLastVisibleIndex() == 0) {
                            JOptionPane.showMessageDialog(rootPane, "A hozzávalók listájának utolsó hozzávalóját nem törölheti! Kérem használja a módosítást!", "Értesítés!", JOptionPane.INFORMATION_MESSAGE);
                            return;
                        }
                        adatbazisKezelo.hozzavaloTorlese(hozzavalo);
                        this.hozzavalok = adatbazisKezelo.hozzavaloBeolvasasa(recept);
                        hozzavalokKiir();
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(rootPane, "Hiba a " + hozzavalo + " hozzávaló törlése közben!", "Hiba!", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    if (hozzavalok.size() == 1) {
                         JOptionPane.showMessageDialog(rootPane, "A hozzávalók listájának utolsó hozzávalóját nem törölheti! Kérem használja a módosítást! ", "Értesítés!", JOptionPane.INFORMATION_MESSAGE);
                         return;
                    }
                    for (int i = 0; i < hozzavalok.size(); i++) {
                        if (hozzavalok.get(i).getDarab() == hozzavalo.getDarab()) {
                            hozzavalok.remove(hozzavalok.get(i));
                        }
                    }
                    listModel.remove(hozzavalokLista.getSelectedIndex());
                    hozzavalokKiir();
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Kérem válassza ki melyik hozzávalót szeretné törölni!", "Értesítés!", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btHozzavaloTorleseActionPerformed
    
    public Recept getRecept() {
        return recept;
    }
    
    public void hozzavalokKiir() {
        listModel.clear();
        for (Hozzavalo hozzavalo : this.hozzavalok) {
            listModel.addElement(hozzavalo);
        }
        
    }
    
    private Boolean receptEllenorzes() {
        if(tfReceptNev.getText().isEmpty() || tfReceptNev.getText().length() > 45) {
            JOptionPane.showMessageDialog(rootPane, "A 'Receptnév' mező vagy üres vagy nagyobb 45 karakternél! Kérem módosítsa vagy kattintson a 'Mégsem' gombra!", "Hiba!", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        
        if(tfEtelFajta.getText().isEmpty() || tfEtelFajta.getText().length() > 45) {
            JOptionPane.showMessageDialog(rootPane, "Az 'Ételfajta' mező vagy üres vagy nagyobb 45 karakternél! Kérem módosítsa vagy kattintson a 'Mégsem' gombra!", "Hiba!", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        
        if (this.getTitle() != "Recept módosítása") {
            try {
            List<Recept> receptek = adatbazisKezelo.beOlvas(fajta);
            for (Recept recept : receptek) {
                if (recept.getNev().equals(tfReceptNev.getText())) {
                    JOptionPane.showMessageDialog(rootPane, "Már létezik egy ilyen recept! Módosítsa kérem a recept nevét vagy kattintson a 'Mégsem' gombra!", "Hiba", JOptionPane.WARNING_MESSAGE);
                    return false;
                }
            }
            } catch(SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Hiba a " + fajta + " receptek beolvasása közben!", "Hiba!", JOptionPane.ERROR_MESSAGE);
            } 
        }
        
        if (listModel.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Kérem adjon hozzá hozzávalókat vagy kattintson a 'Mégsem' gombra!", "Értesítés!", JOptionPane.INFORMATION_MESSAGE);
            return false;
        }

        if (taElkeszetese.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Kérem töltse ki az 'Elkészítése' mezőt vagy kattintson a 'Mégsem' gombra!", "Értesítés!", JOptionPane.INFORMATION_MESSAGE);
            return false;
        }
        return true;
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btHozzavaloModosito;
    private javax.swing.JButton btHozzavaloTorlese;
    private javax.swing.JButton btKesz;
    private javax.swing.JButton btMegsem;
    private javax.swing.JButton btUjHozzavalo;
    private javax.swing.JList<Hozzavalo> hozzavalokLista;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbReceptNev;
    private javax.swing.JTextArea taElkeszetese;
    private javax.swing.JTextField tfEtelFajta;
    private javax.swing.JTextField tfReceptNev;
    // End of variables declaration//GEN-END:variables
}
